<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.ReadPick.dao.RecMapper">

    <!-- insert -->

    <insert id="insertRec" parameterType="rec"> insert into rec values(#{userIdx}, #{bookIdx}, null,
        #{isRecommended}); </insert>

    <!-- /insert -->


    <!-- select -->

    <select id="selectOneUserRec" resultType="String" parameterType="int"> select isRecommended from
        rec where bookIdx = #{bookIdx} and userIdx = #{userIdx} </select>

    <select id="recCount"> select count(*) from rec where bookIdx = #{bookIdx} and isRecommended =
        'Y' </select>

    <select id="recCountMax" resultType="int"> select max(recCountMax) from (select count(*) as
        recCountMax from rec where isRecommended = 'Y' group by bookIdx) as countResults; </select>

    <!-- 유저가 선택한 장르 중 가장 높은 추천수를 가진 책을 리턴 -->
    <select id="recCountMaxByUserRecBookIdxList" resultType="map" parameterType="list"> select
        bookIdx, recCountMax from ( select bookIdx, count(*) as recCountMax from rec where bookIdx
        in <foreach
            item="bookIdx" collection="bookIdxList" open="(" separator="," close=")"> #{bookIdx} </foreach>
        and isRecommended = 'Y' group by bookIdx ) as countResults order by recCountMax desc limit
        4; </select>

    <!-- 현재 추천이 되어있는 모든 책들 중 가장 높은 추천수를 가진 책을 리턴 -->
    <select id="recCountMaxBook" resultType="map"> select bookIdx, recCountMax from ( select
        bookIdx, count(*) as recCountMax from rec where isRecommended = 'Y' group by bookIdx ) as
        countResults order by recCountMax desc limit 1; </select>


    <select id="selectBssIdxListByUserIdx" resultType="Integer" parameterType="int"> select bssIdx
        from userPick where UserIdx = #{UserIdx} order by bssIdx desc </select>

    <select id="selectBsIdxListByUserIdx" resultType="Integer" parameterType="int"> select bsIdx
        from userPick where UserIdx = #{UserIdx} order by bsIdx desc </select>

    <select id="selectBmIdxListByUserIdx" resultType="Integer" parameterType="int"> select bmIdx
        from userPick where UserIdx = #{UserIdx} order by bmIdx desc </select>

    <select id="selectBookIdxByCategoryIdx" resultType="Integer" parameterType="int"> select bookIdx
        from book where bmIdx = #{bmIdx} and bsIdx = #{bsIdx} and bssIdx = #{bssIdx};</select>

    <!-- <select id="selectBookByBookIdx" resultType="book" parameterType=""> select * from
    book where bookIdx in <foreach item="id" collection="bookIdxList" open="(" separator="," close=")">
        #{bookIdx} </foreach>
    </select> -->

    <select id="selectOneUserIsRec" resultType="String" parameterType="int"> select isRecommended
        from rec where bookIdx = #{bookIdx} and userIdx = #{userIdx} </select>

    <!-- /select -->


    <!-- update -->

    <update id="updateRec" parameterType="rec"> update rec set isRecommended = #{isRecommended}
        where userIdx = #{userIdx} and bookIdx = #{bookIdx} </update>

    <!-- /update -->


    <!-- delete -->

    <!-- /delete -->


</mapper>